syntax = "proto3";

package _a69fdf7ae3d5011eab77f2e728ce88125;

enum Allocator {
    // This needs to be here as a zero value.
    DO_NOT_REMOVE = 0;
    VALUE = 1;
};

enum ExtendedFilterCodes {
    // Signal: Report index.
    // Modifier: Time since last report sent.
    LAST_SENT_WITHIN = 0;
};

enum StandardActionCodes {
    // Signal: Report to generate and send.
    SEND = 0;
};

enum ExtendedActionCodes {
    // Signal: Report to generate and send.
    // Modifier: Signal of the event.
    SEND_EVENT = 0;
};

message Config {
    message Report {
        message BlockConfiguration {
            // Indicates which block to apply the argument.
            uint32 index = 1;

            // Argument to pass to the attended message group.
            uint64 arg = 2;
        };

        // Uri index that will be the lookup index to the event message.
        uint32 uri_index = 1;

        // Indicate which blocks it will be packing in the message.
        uint64 block_bitmask = 2;

        // BlockConfigurations for the blocks enabled.
        repeated BlockConfiguration block_config = 3;
    };

    // Hostname of the inbound server.
    string inbound_server = 1;

    // UDP port used to send packets to the inbound server.
    uint32 inbound_port = 2;

    // Hostname of the maintenance server.
    string maintenance_server = 3;

    // UDP port used to checkin to the maintenance server.
    uint32 maintenance_inbound_port = 4;

    // Interval used to perform checkins to the maintenance server.
    uint32 maintenance_checkin_interval = 5;

    // List of reports that the module is able to construct.
    repeated Report reports = 6;
};
