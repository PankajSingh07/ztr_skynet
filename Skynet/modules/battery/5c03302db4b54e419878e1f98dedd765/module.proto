syntax = "proto3";

package mod_5c03302db4b54e419878e1f98dedd765;

enum Allocator {
  // This needs to be here as a zero value.
  DO_NOT_REMOVE = 0;

  VALUE = 1;
}

enum StandardEventCodes {
  // Signal: 0 for low and 1 for normal.
  EXTERNAL_POWER_STATUS = 0;

  // Signal: 0 for low and 1 for normal.
  INTERNAL_POWER_STATUS = 1;

  // Signal: 0 for internal and 1 for external.
  POWER_SOURCE_CHANGE = 2;

  // Signal: 0 for not charging and 1 for charging.
  BATTERY_CHARGE_STATUS = 3;
};

enum StandardFilterCodes {
  // Signal: N/A.
  EXTERNAL_POWER_OK = 0;

  // Signal: N/A.
  INTERNAL_POWER_OK = 1;

  // Signal: 0 for internal and 1 for external.
  CURRENT_POWER_SOURCE = 2;

  // Signal: N/A
  IS_CHARGING = 3;

  // Signal: 0 for 12V and 1 for 24V.
  NOMINAL_SYSTEM_VOLTAGE = 4;
};

enum StandardActionCodes {
  // Signal: 0 for unforced, 1 for not charging and 2 for charging.
  FORCE_CHARGE = 0;

  // Signal: 0 for unforced, 1 for internal and 2 for external.
  FORCE_SOURCE = 1;
};

message Config {
  enum Control {
    // Enable automatic control.
    AUTO = 0;

    // Enable manual control.
    MANUAL = 1;
  };

  // Enable or disable automatic control of internal battery charge.
  Control battery_charge_management = 1;

  // Enable or disable automatic control of current system power source.
  Control power_source_selection = 2;

  // Per cell voltage threshold for minimum viable external power.
  // For example, if the minimum viable voltage for a 12V lead acid battery
  // (which has 6 cells) is 11.1V, the critical external voltage is calculated as
  // 11.1V/6 = 1850mV.
  uint32 critical_external_voltage_mv = 3;
};
