syntax = "proto3";

package mod_a0d76aa3becf4bdabf54ebc6c6c21945;

enum Allocator {
  // This needs to be here as a zero value.
  DO_NOT_REMOVE = 0;
  VALUE = 1;
};

message Config {
  message Register {
    enum Type {
    // Pack a window of 64 flags into the register.
    // arg: Zero-based index of the range defined in the flags module to be packed.
    FLAG = 0;    
    // Pack an analog voltage into the register.
    // arg: The analog input to pack.
    ANALOG = 1;    
    // Pack a value from the KV module into the register.
    // arg: The key to look up from KV.
    KV = 2;
    };

    // The type of the data to pack in the register.
    Type type = 1;    
    
    // The zero-based offset of the register into the register array.
    uint32 id = 2;    
    
    // Type dependent argument describing which values to pack. See enum.
    uint32 arg = 3;
  };

  // The array of registers to be packed.
  repeated Register registers = 1;
};
