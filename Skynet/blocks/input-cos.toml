macros = [
    {}
]
arguments = [
    { name = "delay_interval", label = "Delay Interval", description = "The time in milliseconds needed to allow the device to boot up.", type = "integer", min = "0", max = "4294967295" },
    { name = "input", label = "Input", description = "The integer which denotes the 0 based harness pin number.", type = "integer", min = "0", max = "9223372036854775808" },
    { name = "report_index", label = "Report Index", description = "The report descriptor to send in on changes of state", type = "integer", min = "0", max = "4294967295" },
    { name = "event_signal", label = "Event Signal", description = "The time in milliseconds to wait before sending a COS report message.", type = "integer", min = "0", max = "4294967295" }
] 
lines = [
   # Start timer to allow device to boot up.
   ["power.power_or_wake_up.0", "", "timer.after.^bootup_delay.$delay_interval"],

   # Send out initial bootup CoS messages if input is HIGH.
   ["timer.expired.^bootup_delay", "io.is_high.$input and not report.last_sent_within.$report_index.1", "report.send_event.$report_index.$event_signal"],
   
   # CoS message on input going high.
   ["io.input_high.$input", "not timer.active.^bootup_delay", "report.send_event.$report_index.$event_signal"],

   # CoS message on input going low.
   ["io.input_low.$input", "not timer.active.^bootup_delay", "report.send_event.$report_index.$event_signal"],
 ]
