macros = [
    {}
]

arguments = [
    { name = "boot_index", label = "Boot Index", description = "The key associated to the boot status.", type = "integer" },
    { name = "A_low", label = "A(Low) ", description = "The low threshold voltage (mV) on a 12V system.", type = "integer", min = "0", max = "9223372036854775808" },
    { name = "A_high", label = "A(High)", description = "The high threshold voltage (mV) on a 12V system.", type = "integer", min = "0", max = "9223372036854775808"  },
    { name = "debounce_interval", label = "Debounce Interval", description = "The time (ms) to wait before determining a low threshold crossing.", type = "integer", min = "1"},
    { name = "system_median", label = "System Median", description = " The median threshold (mv) used to determine whether we are running on a 12V or 24V system.", type = "integer", min = "13000", max = "230000" },
    { name = "B_low", label = "B(Low)", description = "The low threshold voltage (mV) on a 24V system.", type = "integer", min = "0", max = "9223372036854775808"  },
    { name = "B_high", label = "B(High)", description = "The high threshold voltage (mV) on a 24V system.", type = "integer", min = "0", max = "9223372036854775808"  },
    { name = "threshold_index", label = "Threshold Index", description = "The key representing the threshold index.", type = "integer" },
    { name = "report_index", label = "Report Index", description = "Index to the report fields representing a threshold crossing.", type = "integer"  },
    { name = "below_signal", label = "Below Signal", description = "The value indicating a low threshold in back a office message.", type = "integer" },
    { name = "above_signal", label = "Above Signal", description = "The value indicating a high threshold in a back office message.", type = "integer" },
    { name = "state", label = "State", description = "The value to be set for the threshold key.", type = "boolean" }
]

lines = [
    # Make sure we send at least once after boot.
    ["power.power_up.0","", "kv.set.$boot_index.1"],

    # Send on crossing analog thresholds on 12V systems.
    ["adc.below_threshold.$A_low", "not timer.active.^above_timer", "timer.after.^below_timer.$debounce_interval"],
    ["adc.below_threshold.$A_low", "timer.active.^above_timer", "timer.cancel.^above_timer"],

    ["adc.above_threshold.$A_high", "not timer.active.^below_timer and adc.is_below_threshold.$system_median", "timer.after.^above_timer.$debounce_interval"],
    ["adc.above_threshold.$A_high", "timer.active.^below_timer and adc.is_below_threshold.$system_median", "timer.cancel.^below_timer"],

    # Send on crossing analog thresholds on 24V systems.
    ["adc.below_threshold.$B_low", "adc.is_above_threshold.$system_median", "timer.after.^below_timer.$debounce_interval"],
    ["adc.below_threshold.$B_low", "adc.is_above_threshold.$system_median and timer.active.^above_timer", "timer.cancel.^above_timer"],

    ["adc.above_threshold.$B_high", "not timer.active.^below_timer", "timer.after.^above_timer.$debounce_interval"],
    ["adc.above_threshold.$B_high", "timer.active.^below_timer", "timer.cancel.^below_timer"],

    # Send register threshold reports after debounce interval.
    ["timer.expired.^below_timer", "kv.exists.$threshold_index or kv.exists.$boot_index", "report.send_event.$report_index.$below_signal"],
    ["timer.expired.^below_timer", "kv.exists.$threshold_index", "kv.delete.$threshold_index"],
    ["timer.expired.^below_timer", "kv.exists.$boot_index", "kv.delete.$boot_index"],

    ["timer.expired.^above_timer", "not kv.exists.$threshold_index or kv.exists.$boot_index", "report.send_event.$report_index.$above_signal"],
    ["timer.expired.^above_timer", "", "kv.set.$threshold_index.$state"],
    ["timer.expired.^above_timer", "kv.exists.$boot_index", "kv.delete.$boot_index"]
]
