macros = [
    {}
]
# arguments = [
#     { name = "delay_interval", label = "Post-boot Delay", description = "The time in milliseconds to wait before sending input states after a cold boot.", type = "integer" },
#     { name = "input", label = "Input Number", description = "The index of the digital input to report changes of state on.", type = "integer", max = $device.digital_inputs },
#     { name = "report_index", label = "Report Index", description = "The report descriptor to send in on changes of state.", type = "integer" },
#     { name = "event_signal", label = "Message Event Signal", description = "The signal to pack into the event message when built.", type = "integer" }
# ]
arguments = [
    { name = "boot_abc_asbdjasbdbasbdashjdhjasdas1213", label = "Boot Index", description = "The signal which reports on boot when a threshold is crossed.", type = "integer", min = "0", max = "4294967295" },
    { name = "A_low", label = "A(Low) ", description = "The lower bound of the A voltage threshold.", type = "integer", min = "0", max = "9223372036854775808" },
    { name = "A_high", label = "A(High)", description = "The upper bound of the A voltage threshold.", type = "integer", min = "0", max = "9223372036854775808"  },
    { name = "debounce_interval", label = "Debounce Interval", description = "The time in milliseconds to wait before sending a report message.", type = "integer", min = "0", max = "4294967295" },
    { name = "system_median", label = "System Median", description = "The voltage which determines if we are running on 12V or 24V, value is based of a 0 based array.", type = "integer", min = "13", max = "23" },
    { name = "B_low", label = "B(Low)", description = "The lower bound of the B voltage threshold.", type = "integer", min = "0", max = "9223372036854775808"  },
    { name = "B_high", label = "B(High)", description = "The upper bound of the A voltage threshold.", type = "integer", min = "0", max = "9223372036854775808"  },
    { name = "threshold_index", label = "Threshold Index", description = "The threshold register used to send register report.", type = "integer", min = "0", max = "4294967295" },
    { name = "report_index", label = "Report Index", description = "The report descriptor to send in on changes of state", type = "integer", min = "0", max = "4294967295" },
    { name = "below_signal", label = "Below Signal", description = "The below voltage threshold report signal to be sent.", type = "integer", min = "0", max = "4294967295"},
    { name = "above_signal", label = "Above Signal", description = "The above voltage threshold report signal to be sent.", type = "integer", min = "0", max = "4294967295" },
    { name = "state", label = "State", description = "The boolean used to illustrated a change of state which is used by threshold index to report signal.", type = "boolean" }
] 
lines = [
    # Make sure we send at least once after boot.
    ["power.power_up.0","", "kv.set.$boot_index.1"],

    # Send on crossing analog thresholds on 12V systems.
    ["adc.below_threshold.$A_low", "not timer.active.^above_timer", "timer.after.^below_timer.$debounce_interval"],
    ["adc.below_threshold.$A_low", "timer.active.^above_timer", "timer.cancel.^above_timer"],

    ["adc.above_threshold.$A_high", "not timer.active.^below_timer and adc.is_below_threshold.$system_median", "timer.after.^above_timer.$debounce_interval"],
    ["adc.above_threshold.$A_high", "timer.active.^below_timer and adc.is_below_threshold.$system_median", "timer.cancel.^below_timer"],

    # Send on crossing analog thresholds on 24V systems.
    ["adc.below_threshold.$B_low", "adc.is_above_threshold.$system_median", "timer.after.^below_timer.$debounce_interval"],
    ["adc.below_threshold.$B_low", "adc.is_above_threshold.$system_median and timer.active.^above_timer", "timer.cancel.^above_timer"],

    ["adc.above_threshold.$B_high", "not timer.active.^below_timer", "timer.after.^above_timer.$debounce_interval"],
    ["adc.above_threshold.$B_high", "timer.active.^below_timer", "timer.cancel.^below_timer"],

    # Send register threshold reports after debounce interval.
    ["timer.expired.^below_timer", "kv.exists.$threshold_index or kv.exists.$boot_index", "report.send_event.$report_index.$below_signal"],
    ["timer.expired.^below_timer", "kv.exists.$threshold_index", "kv.delete.$threshold_index"],
    ["timer.expired.^below_timer", "kv.exists.$boot_index", "kv.delete.$boot_index"],

    ["timer.expired.^above_timer", "not kv.exists.$threshold_index or kv.exists.$boot_index", "report.send_event.$report_index.$above_signal"],
    ["timer.expired.^above_timer", "", "kv.set.$threshold_index.$state"],
    ["timer.expired.^above_timer", "kv.exists.$boot_index", "kv.delete.$boot_index"]
]
