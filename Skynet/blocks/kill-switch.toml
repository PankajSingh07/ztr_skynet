macros = [
	{},
]

arguments = [
    { name = "timeout", label = "Timeout", description = "Duration (ms) before rebooting the unit.", type = "integer", min = "1" },
    { name = "power_profile", label = "Power Profile", description = "The power profile to be applied.", type = "boolean" },
]

lines = [
	["power.power_or_wake_up.0","","flags.$input_determinate_action.^input_determinate_flag"],
	["power.power_or_wake_up.0", "io.is_low.0 and io.is_low.1 and io.is_low.2 and io.is_low.3 or not flags.is_set.^input_determinate_flag", "timer.after.^kill_switch.$timeout"],
	["timer.expired.^kill_switch", "", "cron.wake_after.^wake.2"],    
	["timer.expired.^kill_switch", "", "power.apply_profile.$power_profile"],

	# Disable kill switch on transition of any input high.
	["io.input_high.0", "flags.is_set.^input_determinate_flag", "timer.cancel.^kill_switch"], 
	["io.input_high.1", "flags.is_set.^input_determinate_flag", "timer.cancel.^kill_switch"],
	["io.input_high.2", "flags.is_set.^input_determinate_flag", "timer.cancel.^kill_switch"],

	# Restart kill switch when all inputs are low.
	["io.input_low.0", "io.is_low.1 and io.is_low.2 and flags.is_set.^input_determinate_flag", "timer.after.^kill_switch.$timeout"],
	["io.input_low.1", "io.is_low.0 and io.is_low.2 and flags.is_set.^input_determinate_flag", "timer.after.^kill_switch.$timeout"],
	["io.input_low.2", "io.is_low.0 and io.is_low.1 and flags.is_set.^input_determinate_flag", "timer.after.^kill_switch.$timeout"],
]
